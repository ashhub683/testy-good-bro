name: V2Ray Config Tester

on:
  workflow_dispatch:

jobs:
  test-configs:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq base64

      - name: Fetch configurations
        run: |
          curl -s "https://i-am-in-love.crzsi.workers.dev/subscribe/v2ray.txt?protocol=vmess,vless,shadowsocks,trojan&ports=All%20Ports&tuic=on" > configs.txt
          echo "Total configs found: $(wc -l < configs.txt)"

      - name: Test configurations
        run: |
          mkdir -p temp_configs
          echo "" > correct_configs.txt

          while read -r line; do
            if [[ "$line" == vmess://* ]]; then
              echo "Processing config: ${line:0:30}..."
              
              # Decode base64
              decoded=$(echo "${line:8}" | base64 -d 2>/dev/null)
              if [ -z "$decoded" ]; then
                echo "::error::Invalid base64 encoding"
                continue
              fi

              # Extract parameters
              address=$(echo "$decoded" | jq -r '.add')
              port=$(echo "$decoded" | jq -r '.port')
              id=$(echo "$decoded" | jq -r '.id')

              # Generate Xray config
              cat > temp_configs/config.json <<EOF
              {
                "inbounds": [{
                  "port": 1080,
                  "listen": "127.0.0.1",
                  "protocol": "socks",
                  "settings": {"auth": "noauth"}
                }],
                "outbounds": [{
                  "protocol": "vmess",
                  "settings": {
                    "vnext": [{
                      "address": "$address",
                      "port": $port,
                      "users": [{"id": "$id"}]
                    }]
                  },
                  "streamSettings": {
                    "network": "tcp",
                    "security": "none"
                  }
                }]
              }
              EOF

              # Run Xray and test
              timeout 20s ./xray/xray -c temp_configs/config.json &> xray.log &
              sleep 5
              
              if curl --socks5 127.0.0.1:1080 -o /dev/null -s -w "%{http_code}" https://www.youtube.com | grep -q 200; then
                echo "$line" >> correct_configs.txt
                echo "✅ Config worked!"
              else
                echo "❌ Config failed"
              fi

              pkill -f xray
              sleep 2
            fi
          done < configs.txt

      - name: Show valid configs
        run: |
          echo "Valid configurations:"
          cat correct_configs.txt
          echo -e "\nTotal valid configs: $(wc -l < correct_configs.txt)"

      - name: Upload results
        uses: actions/upload-artifact@v3
        with:
          name: valid-configs
          path: correct_configs.txt
