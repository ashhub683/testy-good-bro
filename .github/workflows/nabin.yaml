name: V2Ray Config Tester

on:
  workflow_dispatch:

jobs:
  test-configs:
    runs-on: ubuntu-latest
    steps:
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq unzip
          
      - name: Download Xray
        run: |
          wget https://github.com/XTLS/Xray-core/releases/download/v1.8.11/Xray-linux-64.zip
          unzip Xray-linux-64.zip -d xray
          chmod +x xray/xray

      - name: Fetch configurations
        run: |
          curl -s "https://i-am-in-love.crzsi.workers.dev/subscribe/v2ray.txt?protocol=vmess,vless,shadowsocks,trojan&ports=All%20Ports&tuic=on" > configs.txt
          echo "Total configs found: $(wc -l < configs.txt)"

      - name: Test configurations
        run: |
          mkdir -p temp_configs
          echo "" > correct_configs.txt

          while read -r line; do
            if [[ "$line" == vmess://* ]]; then
              echo "Processing config: ${line:0:30}..."
              
              decoded=$(echo "${line:8}" | { base64 -d 2>/dev/null || openssl base64 -d -A 2>/dev/null; } | jq -c 2>/dev/null)
              
              if [ -z "$decoded" ]; then
                echo "::warning::Invalid config format"
                continue
              fi

              address=$(echo "$decoded" | jq -r '.add')
              port=$(echo "$decoded" | jq -r '.port')
              id=$(echo "$decoded" | jq -r '.id')

              # Generate dynamic config
              cat > temp_configs/config.json <<EOF
              {
                "log": {"loglevel": "warning"},
                "inbounds": [{
                  "port": 1080,
                  "listen": "127.0.0.1",
                  "protocol": "socks",
                  "settings": {"auth": "noauth"}
                }],
                "outbounds": [{
                  "protocol": "vmess",
                  "settings": {
                    "vnext": [{
                      "address": "$address",
                      "port": $port,
                      "users": [{
                        "id": "$id",
                        "security": "auto"
                      }]
                    }]
                  },
                  "streamSettings": {
                    "network": "tcp",
                    "security": "none"
                  }
                }]
              }
              EOF

              # Test with 30s timeout
              timeout 30s ./xray/xray -c temp_configs/config.json &> xray.log &
              sleep 8  # Increased wait time
              
              if curl --socks5 127.0.0.1:1080 -o /dev/null -s -w "%{http_code}" --max-time 15 https://www.youtube.com | grep -q 200; then
                echo "$line" >> correct_configs.txt
                echo "✅ Working config!"
              else
                echo "❌ Connection failed"
              fi

              pkill -f xray
              sleep 3
            fi
          done < configs.txt

      - name: Show valid configs
        run: |
          echo "----- Valid Configurations -----"
          cat correct_configs.txt
          echo -e "\nTotal Valid: $(wc -l < correct_configs.txt)"

      - name: Upload results
        uses: actions/upload-artifact@v4
        with:
          name: valid-configs
          path: correct_configs.txt
