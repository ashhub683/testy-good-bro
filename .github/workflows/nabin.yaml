name: Test-Xray-Config

on:
  push:
  pull_request:

jobs:
  test-xray:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y curl unzip
      - name: Download Xray
        run: |
          wget https://github.com/XTLS/Xray-core/releases/download/v25.3.6/Xray-linux-64.zip
          unzip Xray-linux-64.zip -d xray
          chmod +x xray/xray
      - name: Create Config File
        run: |
          cat > config.json <<'EOF'
          {
            "log": { 
              "loglevel": "debug",
              "access": "access.log",
              "error": "error.log"
            },
            "inbounds": [
              {
                "port": 1080,
                "listen": "127.0.0.1",
                "protocol": "socks",
                "settings": { "auth": "noauth", "udp": false }
              }
            ],
            "outbounds": [
              {
                "protocol": "vless",
                "settings": {
                  "vnext": [
                    {
                      "address": "testforwork1324.pages.dev",  # Use domain instead of IP
                      "port": 443,
                      "users": [
                        {
                          "id": "71e4f7be-839e-4709-a7a0-5d820a593fc1",
                          "encryption": "none"
                        }
                      ]
                    }
                  ]
                },
                "streamSettings": {
                  "network": "ws",
                  "security": "tls",
                  "tlsSettings": {
                    "serverName": "testforwork1324.pages.dev"  # Explicit SNI
                  },
                  "wsSettings": {
                    "path": "/correct-path-here",  # Verify correct WebSocket path
                    "headers": { "Host": "testforwork1324.pages.dev" }
                  },
                  "alpn": ["h2", "http/1.1"],
                  "fp": "chrome"  # Use recognized fingerprint
                },
                "tag": "proxy"
              },
              {
                "protocol": "freedom",
                "tag": "direct"
              }
            ],
            "routing": {
              "domainStrategy": "AsIs",
              "rules": [
                {
                  "type": "field",
                  "ip": ["geoip:private"],
                  "outboundTag": "direct"
                }
              ]
            }
          }
          EOF
      - name: Run Xray with logging
        run: |
          ./xray/xray -config config.json &> xray.log &
          sleep 20  # Increased initialization time
      - name: Show Xray logs
        run: cat xray.log
      - name: Test Proxy Connection
        run: |
          # Test basic connectivity first
          curl --socks5 127.0.0.1:1080 -v http://example.com
          # Then test HTTPS with verbose output
          curl --socks5 127.0.0.1:1080 -o /dev/null -s -w "Total time: %{time_total}s\n" -v https://www.google.com
      - name: Capture logs on failure
        if: ${{ failure() }}
        run: |
          cat xray.log
          cat access.log
          cat error.log
      - name: Stop Xray
        run: pkill -f xray
